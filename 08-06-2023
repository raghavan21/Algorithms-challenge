## Algorithms: Coding Puzzles
**Title:**      

    Question 3: Is the permutation divisible by 7?

**Language:**   
                
    Python

**Algorithm:**  
                        
  1. Import the itertools module.
  2. Generate all permutations of the digits '1867' using the permutations function from itertools.
  3. Create an empty list called divisible_perms.
  4. For each permutation:
      a. Convert the permutation into an integer using the join function and int.
      b. Check if the integer is divisible by 7 using the modulo operator %.
      c. If the integer is divisible by 7, add it to divisible_perms.
  5. If divisible_perms is not empty:
      a. Calculate the smallest value in divisible_perms using the min function.
      b. Calculate the largest value in divisible_perms using the max function.
      c. Calculate the average value of the smallest and largest values using the formula (smallest_perm + largest_perm) / 2.
      d. Print the message "The average between the smallest (smallest_perm) and largest (largest_perm) permutation is avg."
  6. If divisible_perms is empty, print the message "None of the permutations of 1867 are divisible by 7.".
            
**Code:**     
```python
import itertools

perms = itertools.permutations('1867')
# print(list(perms))

divisible_perms = []

for perm in perms:
    # print(perm)
    num = int(''.join(perm))
    print(num)
    if num % 7 == 0:
        divisible_perms.append(num)

if divisible_perms:
    smallest_perm = min(divisible_perms)
    largest_perm = max(divisible_perms)
    avg = (smallest_perm + largest_perm) / 2
    print(f"The average between the smallest ({smallest_perm}) and largest ({largest_perm}) permutation is {avg}.")
else:
    print("None of the permutations of 1867 are divisible by 7.")
 ```
 
 **Solution:** 
 
   The average between the smallest (1687) and largest (8617) permutation is 5152.
